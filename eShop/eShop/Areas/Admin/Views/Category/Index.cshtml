@using eShop.Areas.Admin.ViewModels.Category
@model IEnumerable<ListItemCategoryVM>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
@if (TempData["Err"] != null)
{
	<div class="alert alert-danger alert-dismissible fade show" role="alert">
		@TempData["Err"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

<div id="tblCate">
	<button class="btn btn-info my-3" @@click="refreshData()">Làm mới dữ liệu</button>
	<table class="table">
		<thead>
			<tr>
				<th>ID</th>
				<th>Tên danh mục</th>
				<th>Tạo lúc</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			<tr v-for="cate in categories">
				<td>{{cate.id}}</td>
				<td>{{cate.name}}</td>
				<td>{{new Date(cate.createdAt).toLocaleString()}}</td>
				<td>
					<a :href="'/Admin/Category/Update/' + cate.id">Sửa</a>
					<a :href="'/Admin/Category/Delete/' + cate.id">Xóa</a>
				</td>
			</tr>
		</tbody>
	</table>
</div>

@section Scripts{

	<script>
		let noti = new AWN();

		Vue.createApp({
			data() {
				return {
					categories: []
				}
			},
			methods: {
				refreshData() {
					noti.asyncBlock(
						// lệnh gọi ajax
						axios.get("/Admin/Category/GetAll"),
						// xử lý khi thành công,
						(response) => {
							this.categories = response.data;
							noti.success("Tải dữ liệu danh mục thành công");
						},
						// xử lý khi thất bại
						(err) => {
							console.log(err);
						},
						"Chờ tí"
					);
				}
			},
			mounted() {
				this.refreshData();
			}
		}).mount("#tblCate");
	</script>
}